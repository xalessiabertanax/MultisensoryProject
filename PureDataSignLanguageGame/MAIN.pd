#N canvas 230 38 1227 916 12;
#X msg 20 115 \; pd dsp \$1;
#X obj 20 43 tgl 30 0 empty empty empty 17 7 0 10 #9c9c9c #000000 #000000 0 1;
#X obj 34 93 s global_volume_fade;
#X text 60 48 <-Click to start/stop DSP;
#X obj 168 434 unpackOSC;
#X obj 339 625 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 339 591 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 168 410 udpreceive 8080;
#X floatatom 510 501 5 0 0 0 - - - 0;
#X floatatom 168 508 5 0 0 0 - - - 0;
#X floatatom 339 499 5 0 0 0 - - - 0;
#X msg 510 594 stop;
#X obj 510 567 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0.soundTable 1.9475e+06 float 0;
#X coords 0 1.02 1.9475e+06 -1.02 200 130 1;
#X restore 726 1036 graph;
#X obj 196 1415 hip~ 5;
#X text 205 1219 <-- frequency (Hz.);
#X floatatom 379 1021 0 0 0 0 - - - 0;
#X obj 379 1048 * 441;
#X obj 196 1300 *~ 0;
#X obj 196 1341 +~ 1;
#X obj 196 1191 phasor~ 0;
#X text 436 1021 <-- chunk size (100ths of a second);
#X text 751 1170 ---- 44103 samples ----;
#X obj 319 1140 /;
#X obj 196 1159 * 1;
#X obj 185 1447 dac~;
#X msg 319 1112 44100 \$1;
#X obj 196 1382 tabread4~ \$0.soundTable;
#X obj 339 687 send audio;
#X obj 168 584 send speed;
#X obj 196 1094 receive speed;
#X obj 510 625 send stop;
#X obj 769 1221 loadbang;
#X obj 769 1387 soundfiler;
#X obj 769 1277 symbol \$1;
#X obj 769 1322 pack s f;
#X obj 867 1269 f \$0;
#X obj 769 1250 t b b;
#X obj 769 1417 / 441;
#X msg 769 1356 read -resize \$1 \$2.soundTable;
#X obj 662 1222 receive audio;
#X obj 769 1446 send sample;
#X obj 379 982 receive sample;
#X text 65 1093 looping sample ->;
#X obj 379 1082 send value;
#X obj 221 1259 receive value;
#X text 46 582 Change speed ->;
#X text 52 508 Speed value ->;
#X obj 669 1322 receive stop;
#X text 39 462 Message types ->;
#X text 389 1382 <- read from the table;
#X text 241 1341 <- add one to avoid beginning of table;
#X text 242 1299 <- readjust phase for range 0 - (chunk size);
#X text 319 30 The patch for playback of the background music for the Finger Letter guess game. The general rule is speed up the music by 0.1 time every time user guesses the correct word by forming the sign language letter using the glove we provide, f 70;
#X text 74 656 Send preselected music to looper ->;
#X text 425 691 <- Start music;
#X text 599 625 <- Stop music;
#X text 488 1738 receive message from processing;
#X msg 455 1859 open ./letters/B.wav;
#X msg 426 1835 open ./letters/A.wav;
#X msg 485 1885 open ./letters/D.wav;
#X msg 514 1912 open ./letters/E.wav;
#X msg 544 1940 open ./letters/F.wav;
#X msg 573 1966 open ./letters/G.wav;
#X msg 603 1993 open ./letters/H.wav;
#X msg 632 2022 open ./letters/I.wav;
#X msg 662 2049 open ./letters/N.wav;
#X msg 691 2080 open ./letters/O.wav;
#X msg 721 2110 open ./letters/R.wav;
#X msg 750 2142 open ./letters/S.wav;
#X obj 681 500 send letter;
#X obj 370 1739 receive letter;
#X obj 270 1804 print letter;
#X obj 370 2217 dac~, f 5;
#X obj 426 1805 select 65 66 68 69 70 71 72 73 78 79 82 83, f 51;
#X msg 370 1804 start;
#X obj 370 2161 readsf~ 1;
#X obj 173 549 print speed;
#X obj 517 530 print stopped;
#X obj 345 528 print started;
#X text 520 3267 ------------------------------------------------------------ ------------------------------------------------------------;
#X text 347 251 ------------------------------------------------------------The part for handling the messages coming from Processing ____________________________________________________________ Here the patch receive three different types of messages to either start \, stop or modify the speed of the background music. ------------------------------------------------------------;
#X text 351 832 ------------------------------------------------------------The part for looping the selected music. ____________________________________________________________Here the patch receives both music and speed value. Depending on the speed value the flow modifies the frequency of the audio sample. ------------------------------------------------------------;
#X text 370 1590 -------------------------------------------------------------- The part for handling the letter messages coming from Processing ___________________________________________________ Here the patch receive letters messages to play the spelling. --------------------------------------------------------------, f 65;
#X obj 370 2188 *~ 4;
#X obj 58 2473 print checkpoint;
#X obj 734 2503 print checkpoint;
#X obj 852 523 send playCheckpoint;
#X obj 194 2612 dac~, f 5;
#X obj 194 2585 *~ 2;
#X obj 194 2555 readsf~ 1;
#X obj 194 2474 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X msg 252 2512 open ./musics/checkPoint.wav;
#X msg 194 2511 start;
#X obj 194 2434 receive playCheckpoint;
#X obj 874 2438 receive playFinal;
#X obj 874 2609 dac~, f 5;
#X obj 874 2582 *~ 2;
#X obj 874 2552 readsf~ 1;
#X obj 874 2471 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X msg 874 2508 start;
#X msg 932 2509 open ./musics/final.wav;
#X obj 1023 523 send playFinal;
#X obj 20 13 loadbang;
#X text 1041 557 ^ Play final music;
#X text 840 557 ^ Play checkpoint music;
#X text 670 535 ^ Play spell of letter;
#X text 478 1783 A B D E F G H I N O R S;
#X text 84 2355 ------------------------------------------------------------ Play checkpoint sound ------------------------------------------------------------;
#X text 692 2350 ------------------------------------------------------------ Play final sound ------------------------------------------------------------;
#X text 303 404 <- receive message from processing;
#X floatatom 1023 494 5 0 0 0 - - - 0;
#X floatatom 852 493 5 0 0 0 - - - 0;
#X obj 168 461 route /speed /start /stop /letter /checkpoint /final, f 147;
#X msg 339 655 mozart.wav;
#X connect 1 0 0 0;
#X connect 1 0 2 0;
#X connect 4 0 113 0;
#X connect 5 0 114 0;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X connect 8 0 12 0;
#X connect 8 0 78 0;
#X connect 9 0 29 0;
#X connect 9 0 77 0;
#X connect 10 0 6 0;
#X connect 10 0 79 0;
#X connect 11 0 31 0;
#X connect 12 0 11 0;
#X connect 14 0 25 0;
#X connect 14 0 25 1;
#X connect 16 0 17 0;
#X connect 17 0 26 0;
#X connect 17 0 44 0;
#X connect 18 0 19 0;
#X connect 19 0 27 0;
#X connect 20 0 18 0;
#X connect 23 0 24 1;
#X connect 24 0 20 0;
#X connect 26 0 23 0;
#X connect 27 0 14 0;
#X connect 30 0 24 0;
#X connect 32 0 37 0;
#X connect 33 0 38 0;
#X connect 34 0 35 0;
#X connect 35 0 39 0;
#X connect 36 0 35 1;
#X connect 37 0 34 0;
#X connect 37 1 36 0;
#X connect 38 0 41 0;
#X connect 39 0 33 0;
#X connect 40 0 34 0;
#X connect 42 0 16 0;
#X connect 45 0 18 1;
#X connect 48 0 39 0;
#X connect 58 0 76 0;
#X connect 59 0 76 0;
#X connect 60 0 76 0;
#X connect 61 0 76 0;
#X connect 62 0 76 0;
#X connect 63 0 76 0;
#X connect 64 0 76 0;
#X connect 65 0 76 0;
#X connect 66 0 76 0;
#X connect 67 0 76 0;
#X connect 68 0 76 0;
#X connect 69 0 76 0;
#X connect 71 0 72 0;
#X connect 71 0 74 0;
#X connect 71 0 75 0;
#X connect 74 0 59 0;
#X connect 74 1 58 0;
#X connect 74 2 60 0;
#X connect 74 3 61 0;
#X connect 74 4 62 0;
#X connect 74 5 63 0;
#X connect 74 6 64 0;
#X connect 74 7 65 0;
#X connect 74 8 66 0;
#X connect 74 9 67 0;
#X connect 74 10 68 0;
#X connect 74 11 69 0;
#X connect 75 0 76 0;
#X connect 76 0 84 0;
#X connect 84 0 73 0;
#X connect 89 0 88 0;
#X connect 90 0 89 0;
#X connect 91 0 92 0;
#X connect 91 0 93 0;
#X connect 92 0 90 0;
#X connect 93 0 90 0;
#X connect 94 0 85 0;
#X connect 94 0 91 0;
#X connect 95 0 86 0;
#X connect 95 0 99 0;
#X connect 97 0 96 0;
#X connect 98 0 97 0;
#X connect 99 0 101 0;
#X connect 99 0 100 0;
#X connect 100 0 98 0;
#X connect 101 0 98 0;
#X connect 103 0 1 0;
#X connect 111 0 102 0;
#X connect 112 0 87 0;
#X connect 113 0 9 0;
#X connect 113 1 10 0;
#X connect 113 2 8 0;
#X connect 113 3 70 0;
#X connect 113 4 112 0;
#X connect 113 5 111 0;
#X connect 114 0 28 0;
